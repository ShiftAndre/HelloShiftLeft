# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m
    
    steps:
      - checkout
      # Install SL agent
      - run: 
          name: Install Shiftleft agent
          command: curl https://www.shiftleft.io/download/sl-latest-linux-x64.tar.gz > /tmp/sl.tar.gz && sudo tar -C /usr/local/bin -xzf /tmp/sl.tar.gz
         
      # Authorize SL agent
      - run: 
          name: Authorize Shiftleft agent
          command: sl auth --org "0a4c8175-57fa-4b4c-91fb-b79b98d4cd3a" --token "eyJhbGciOiJSUzUxMiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1ODU5NDYxODksImlzcyI6IlNoaWZ0TGVmdCIsIm9yZ0lEIjoiMGE0YzgxNzUtNTdmYS00YjRjLTkxZmItYjc5Yjk4ZDRjZDNhIiwic2NvcGVzIjpbImFwaTp2MiIsInVwbG9hZHM6d3JpdGUiLCJsb2c6d3JpdGUiLCJwaXBlbGluZXN0YXR1czpyZWFkIiwibG9nOndyaXRlIiwicG9saWNpZXM6cmVhZCJdfQ.TflrHbl4Ypdkj9fsNdy8YocDdFoGhfyWOSZiflYoSec1d2Rymwnx82fKUpU40UUzNcjxPU9113q3npZIYwZdxTJ3A_UXd136ohHBi8hC-ui9C9cGc5w7Cg-0GrWcjT1ixLRP5G1QL_GzU4ozDbbpiRwKeKhguNqGs24DhcIaWl8m1ZcsvloxCkUqFUYxxkb3YfFn7wpa7paRLOQC3ZV2fLzEVwDuoFCuiKrWNZ7GDBtgsR6vB_uP0KImIxqZJhRlYcvcumYvd5UEoZ4cHfwkQJjy35vIkhzEKMSBDiYaX8MHmt4wjbnhGIN8h94afr4tfAGpk-hDzqechw1f_LBAaQ"
          
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}
          
      # build the apps!!
      - run: 
          name: Build the application
          command: mvn clean package
     
      - run:
          name: Update PATH and Define Environment Variable at Runtime
          command: |
            echo 'export APP_NAME=Docker_Demo_App' >> $BASH_ENV
            source $BASH_ENV
      
      # Analyze for security
      - run: 
          name: Analyze for security bugs
          command: sl analyze --wait --app $APP_NAME target/hello-shiftleft-0.0.1.jar
          
     #  Prioritize security bugs
      - run: 
          name: Prioritize security bugs
          command: sh uat.sh
      
     #  Test Security Results
      - run: 
          name: Assert build quality against security standards
          command: '[[ $(curl -s "https://www.shiftleft.io/api/v2/organizations/$SHIFTLEFT_ORG_ID/projects/$APP_NAME/metrics" -H "authorization: Bearer $TOKEN" -H "content-type: application/json" --data-binary "{\"context\":{\"projectSpId\":\"sl/$SHIFTLEFT_ORG_ID/$APP_NAME\"},\"queries\":[{\"violationsAll\":{\"projectSpId\":\"sl/$SHIFTLEFT_ORG_ID/$APP_NAME\"}}]}" | jq ".responses[0].violationsAll.violations | map(select(.count > 0)) | map(.name)" | grep -o "sensitive-to-http" | wc -l) -le 20 ]]'

#  deploy:
 #   docker:
  #    - image: google/cloud-sdk
   # steps:
    
      # Set up Google cloud authentication access
   #   - run: 
    #    name: Set up Google Cloud Auth
     #   command: |
      #    echo $GCLOUD_SERVICE_KEY | base64 --decode | sudo gcloud auth activate-service-account --key-file=-
       #   sudo gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
        #  sudo gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
      
      # Download the relevant files
    #  - run: 
     #   name: Download HelloShiftLeft Code
      #  command: git clone https://github.com/alokshukla1978/HelloShiftLeft.git
      
      # Set up Google cloud authentication access
     # - run: 
      #  name: Run Python Command
       # command: |
        #  cd HelloShiftLeft
         # python create-deploy-instance.py --zone us-east1-b --name test-1 affable-cacao-206319 sl-test-bucket
