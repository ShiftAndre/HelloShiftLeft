# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m
    
    steps:
      - checkout
      # Install SL agent
      - run: 
          name: Install Shiftleft agent
          command: curl https://www.shiftleft.io/download/sl-latest-linux-x64.tar.gz > /tmp/sl.tar.gz && sudo tar -C /usr/local/bin -xzf /tmp/sl.tar.gz
                 
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "pom.xml" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}
          
      # build the apps!!
      - run: 
          name: Build the application
          command: mvn clean package
     
      - run:
          name: Update PATH and Define Environment Variable at Runtime
          command: |
            echo 'export APP_NAME=Docker_Demo_App' >> $BASH_ENV
            source $BASH_ENV
      
      # Analyze for security
      #- run: 
      #    name: Analyze for security bugs
      #    command: sl analyze --wait --tag branch=$CIRCLE_BRANCH --app $APP_NAME target/hello-shiftleft-0.0.1.jar
          
     #  Prioritize security bugs
     # - run: 
     #     name: Prioritize security bugs
     #     command: sh uat.sh
      
     #  Test Security Results
      - run: 
          name: Assert build quality against security standards
          command: |
            BUILD_RESULT=$(curl --fail --show-error -X GET https://www.shiftleft.io/api/v3/public/org/$SHIFTLEFT_ORG_ID/app/$APP_NAME/tag/branch/$CIRCLE_BRANCH/build -H 'Accept: */*' -H 'Authorization: Bearer $SHIFTLEFT_API_TOKEN' -H 'Cache-Control: no-cache' -H 'Connection: keep-alive' -H "Host: www.shiftleft.io" -H 'accept-encoding: text/plain, deflate' -H 'cache-control: no-cache' -H 'cookie: Cookie_3=value' -s -b Cookie_3=value)
            echo $BUILD_RESULT
            SUCCESS=$(echo $BUILD_RESULT | grep "success")
            if [ -z "$SUCCESS" ]; then
                exit 1;
            fi
            exit 0
              
     #  Comment on Pull Request if build fails due to security issues
     #- run:
     #     name: Add GitHub PR comments
     #     command: curl --data fail_tests.log http://example.com/error_logs
     #     when: on_fail     
          

#  deploy:
 #   docker:
  #    - image: google/cloud-sdk
   # steps:
    
      # Set up Google cloud authentication access
   #   - run: 
    #    name: Set up Google Cloud Auth
     #   command: |
      #    echo $GCLOUD_SERVICE_KEY | base64 --decode | sudo gcloud auth activate-service-account --key-file=-
       #   sudo gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
        #  sudo gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
      
      # Download the relevant files
    #  - run: 
     #   name: Download HelloShiftLeft Code
      #  command: git clone https://github.com/alokshukla1978/HelloShiftLeft.git
      
      # Set up Google cloud authentication access
     # - run: 
      #  name: Run Python Command
       # command: |
        #  cd HelloShiftLeft
         # python create-deploy-instance.py --zone us-east1-b --name test-1 affable-cacao-206319 sl-test-bucket
